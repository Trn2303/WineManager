@model WineManager.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Sửa thông tin sản phẩm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container my-4">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Vintage, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Vintage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vintage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CatalogyID, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CatalogyID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CatalogyID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Lưu" class="btn btn-outline-success my-3" />
                        @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-outline-secondary mx-2" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 my-2" })
                    <div class="col-md-10">
                        @{
                            ViewBag.ImgPath = "~/wwwroot/WineImages/" + Html.DisplayFor(model => model.Image);
                        }
                        <img id="output" class="img-rounded" alt="Ảnh" width="180" height="200" src="@Url.Content(@ViewBag.ImgPath)" />
                        <p><label for="ufile" style="cursor: pointer;" class="btn btn-outline-success my-3">Chọn ảnh</label></p>
                        <input name="ImgFile" id="ufile" type="file" style="display: none;" onchange="loadFile(event)" />
                    </div>
                </div>
            </div>
        </div>
        

        

    </div>
}

<script>
    var loadFile = function (event) {
        var image = document.getElementById('output');
        image.src = URL.createObjectURL(event.target.files[0]);
    }
</script>